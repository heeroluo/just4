import{EventEmitter}from"eventemitter3";import{PollingEvent}from"./events";let theGlobal;"undefined"!=typeof window?theGlobal=window:"undefined"!=typeof global&&(theGlobal=global);const pollingTasks=[];export class Polling{static stopAll(){for(let t=pollingTasks.length-1;t>=0;t--)pollingTasks[t].stop()}constructor(t,e){this._options={},this._started=!1,this._isExecuting=!1,this._shouldImmediate=!1,this._eventEmitter=new EventEmitter,this._executor=t,this.updateOptions(e)}updateOptions(t){t&&Object.assign(this._options,t)}_exec(){let t;try{t=this._executor.call(theGlobal)}catch(t){throw this._options.breakOnError?this.stop():this._next(),t}t&&"function"==typeof t.then?(this._isExecuting=!0,t.then((()=>{this._isExecuting=!1,this._next()}),(t=>{throw this._isExecuting=!1,!0===this._options.breakOnError?this.stop():this._next(),t}))):this._next()}_next(){if(this._shouldImmediate)this._exec();else if(this._started){if("function"==typeof this._options.shouldContinue&&!1===this._options.shouldContinue.call(theGlobal))return void this.stop();this._timer=setTimeout((()=>{this._exec()}),Number(this._options.interval)||1e3)}}_clearTimeout(){switch(typeof this._timer){case"number":window.clearTimeout(this._timer);break;case"object":clearTimeout(this._timer)}this._timer=void 0}execImmediately(){this._clearTimeout(),this._isExecuting?this._shouldImmediate=!0:this._exec()}start(){this._started||(this._started=!0,-1===pollingTasks.indexOf(this)&&pollingTasks.push(this),this._eventEmitter.emit(PollingEvent.START),this._exec())}stop(){if(!this._started)return;this._clearTimeout(),this._started=!1;const t=pollingTasks.indexOf(this);-1!==t&&pollingTasks.splice(t,1),this._eventEmitter.emit(PollingEvent.STOP)}on(t,e,i){this._eventEmitter.on(t,e,i)}off(t,e,i){this._eventEmitter.off(t,e,i)}}