import{isEmpty}from"@just4/util/object";import{isObject}from"@just4/util/type";import{stringify}from"@just4/querystring/index";import{RequestWith}from"../../types";import{RequestError,RequestErrorType}from"../../request-error";import{isOldIE,isCrossDomain,handleRequestResult,setHeader}from"../../internal/util";import{TaskManager}from"../../internal/task-manager";import{MSG_ABORTED}from"../../internal/message";import{createXhrEventListeners}from"./events";const taskManager=new TaskManager;function createXhr(e,t,r,s,n){return e&&isOldIE()&&window.XDomainRequest&&("get"===t||"post"===t)&&!r&&!n&&isEmpty(s)?new window.XDomainRequest:new window.XMLHttpRequest}function setXhrPropsAndHeaders(e,t,r,s){null!=t.timeout&&(e.timeout=t.timeout),r&&null!=t.withCredentials&&(e.withCredentials=!!t.withCredentials),r||setHeader(s,"X-Request-With","XMLHttpRequest",!1),Object.keys(s).forEach((function(t){null!=s[t]&&e.setRequestHeader(t,String(s[t]))}))}function handleRequestBody(e,t,r,s){if(null==r||"GET"===e)return;let n,o;return"json"===s?(n="string"==typeof r?r:JSON.stringify(r),o="application/json; charset=utf-8"):(n=isObject(r)?stringify(r,{ignoreEmpty:!1}):r,"string"==typeof n&&(o="application/x-www-form-urlencoded; charset=utf-8")),setHeader(t,"Content-Type",o,!1),n}export const xhrAdapter={send:e=>new Promise(((t,r)=>{let s=0;const n=isCrossDomain(e.url),o=createXhr(n,e.method,e.requestType,e.headers,e.withCredentials);createXhrEventListeners(o,e,(function(e){taskManager.removeTask(s),t(e)}),(function(e){s&&taskManager.removeTask(s),r(e)})),s=taskManager.addTask({xhr:o,options:e,reject:r}),"blob"!==e.responseType&&"arraybuffer"!==e.responseType||(o.responseType=e.responseType),o.open(e.method,e.url,!0,e.username,e.password);const i=handleRequestBody(e.method,e.headers,e.data,e.requestType);setXhrPropsAndHeaders(o,e,n,e.headers);const a=e.beforeSend;"function"==typeof a&&a(o),o.send(i||"");const u=e.receiveTaskId;"function"==typeof u&&u(s)})),abort(e){const t=taskManager.removeTask(e);if(t){t.xhr.abort();return(0,t.reject)(new RequestError({message:MSG_ABORTED,type:RequestErrorType.ABORTED,result:handleRequestResult({xhr:t.xhr,options:t.options},RequestWith.XHR)})),!0}return!1}};